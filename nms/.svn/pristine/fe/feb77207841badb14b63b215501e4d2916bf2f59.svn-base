package com.kuaidu.nms.user.serviceImpl;

import java.util.List;
import java.util.Set;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.kuaidu.nms.entity.UserInfo;
import com.kuaidu.nms.user.mapper.UserManagementMapper;
import com.kuaidu.nms.utils.HttpUtil;
/*
 * 接口实现类
 * */
@Service
@Transactional 
public class UserManagementMapperImpl {
	@Autowired
	UserManagementMapper uMapper;
	@Autowired
	RedisTemplate<String, Object> redisTemplate;
	//查询书籍
	public List<UserInfo> getAllRecords(UserInfo rList) {
		 List<UserInfo> allRecords = uMapper.getAllRecords(rList);
		 
		 
		 try {
			String string2 = HttpUtil.get("http://c1.mzshu.com/kdread/onlineUserId", null, 10000, 10000, "utf-8");
			 List<String> list = JSONObject.parseArray(string2,String.class);
			 for (int i = 0; i < allRecords.size(); i++) {
				for (String string : list) {
					int userId = Integer.parseInt(StringUtils.substringAfter(string, ":"));
					if (allRecords.get(i).getUser_id() == userId) {
						allRecords.get(i).setOnline(1);
					}
				}
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		 return allRecords;
	}
	//获取书籍记录总行数
	public int getCount(UserInfo rList) {
		return uMapper.getCount(rList);
	}

	public int getOnlineNum() {
		Set<String> keys = redisTemplate.keys("RequestOnline--ID:**");
		return keys.size();
	}
	public List<UserInfo> getActiveUsersByPartnerId(Integer partner_id) {
		// TODO Auto-generated method stub
		return uMapper.getActiveUsersByPartnerId(partner_id);
	}

}
