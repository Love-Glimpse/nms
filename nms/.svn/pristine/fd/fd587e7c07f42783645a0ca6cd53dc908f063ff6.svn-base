package com.kuaidu.nms.partner.push.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.kuaidu.nms.entity.PartnerInfo;
import com.kuaidu.nms.entity.PartnerKeyword;
import com.kuaidu.nms.partner.push.serviceImpl.KeywordReplyServiceImpl;
import com.kuaidu.nms.utils.ResultData;
import com.kuaidu.nms.utils.Utils;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/** 
 * @Title KeywordReplyController.java 
 * @description 关键词回复配置
 * @time 2018年11月7日 下午2:23:41 
 * @author victor 
 * @version 1.0 
**/
@Controller
@RequestMapping("partnerKeywordReply")
public class KeywordReplyController {
	@Autowired
	KeywordReplyServiceImpl kImpl;
	
	@RequestMapping("/keywordReplyIndex")
	public ModelAndView keywordReplyIndex(HttpSession session){
		ModelAndView mv = new ModelAndView();
		try {
			mv.setViewName("partner/PushChannel/keywordReply"); 
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mv;
	}
	@ResponseBody
	@RequestMapping("/getKeywordReply")
	public String getKeywordReply(HttpSession session,HttpServletRequest request){
		PartnerInfo partnerInfo = Utils.getPartnerFromSession(session);
		if (partnerInfo==null) {
			return null;
		}
		Integer page= Integer.parseInt(request.getParameter("page"));	
		Integer rows= Integer.parseInt(request.getParameter("rows"));
		Integer start_rows = (page-1)*rows;
		List<PartnerKeyword> pKeywords = kImpl.getKeywordReply(start_rows,rows,partnerInfo.getPartner_id());
		int total = kImpl.getKeywordReplyCount();
		return ResultData.toJsonString(total, pKeywords);
	}
	@ResponseBody
	@RequestMapping("/delKeyword")
	public String delKeywords(HttpSession session,HttpServletRequest request){
		PartnerInfo partnerInfo = Utils.getPartnerFromSession(session);
		if (partnerInfo==null) {
			return null;
		}
		String node =request.getParameter("node");
		JSONObject jsonObject = new JSONObject();
		try {
			JSONArray jsonArray = JSONArray.fromObject(node);  
	        List<Object> list= new ArrayList<Object>();
	        for(int i=0;i<jsonArray.size();i++){
	            list.add(jsonArray.get(i));
	        }
	        kImpl.delKeywords(list,partnerInfo.getPartner_id());
	        jsonObject.put("result", "0");
	        
		} catch (Exception e) {
			 jsonObject.put("result", "1");
			e.printStackTrace();
			
		}
		return jsonObject.toString();
	}
	@ResponseBody
	@RequestMapping("/addKeyword")
	public String addKeyword(HttpSession session,HttpServletRequest request,PartnerKeyword partnerKeyword){
		PartnerInfo partnerInfo = Utils.getPartnerFromSession(session);
		if (partnerInfo==null) {
			return null;
		}
		String node =request.getParameter("node");
		JSONObject jsonObject = new JSONObject();
		try {
			JSONArray jsonArray = JSONArray.fromObject(node);  
	        List<Object> list= new ArrayList<Object>();
	        for(int i=0;i<jsonArray.size();i++){
	            list.add(jsonArray.get(i));
	        }
	        kImpl.addKeyword(partnerKeyword);
	        jsonObject.put("result", "0");
	        
		} catch (Exception e) {
			 jsonObject.put("result", "1");
			e.printStackTrace();
			
		}
		return jsonObject.toString();
	}
}
