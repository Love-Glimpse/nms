package com.kuaidu.nms.partner.controller;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageInfo;
import com.kuaidu.nms.entity.Book_list;
import com.kuaidu.nms.entity.Novel_type;
import com.kuaidu.nms.partner.serviceImpl.BookServiceImpl;

@Controller
@RequestMapping("partner")
public class BookController {

	@Autowired
	BookServiceImpl bookServiceImpl;

	/**
	 * 书籍列表页面获取内容
	 * @param sex		性别
	 * @param isserial	是否完结
	 * @param typeId	类型
	 * @param hotValue  派单指数
	 * @param pn      	页数
	 * @param ps  		每页数量
	 * @return
	 */
	@ResponseBody
	@GetMapping("books")
	public HashMap<String, Object> getBooksBycondition(@RequestParam(defaultValue = "2") int sex,
			@RequestParam(defaultValue = "2") int isserial, @RequestParam(defaultValue = "0") int typeId,
			@RequestParam(defaultValue = "0") int hotValue, @RequestParam() int pn, @RequestParam() int ps,
			@RequestParam()String bookName) {
		List<Novel_type> list = bookServiceImpl.getNovelTypeBy(sex);
		PageInfo<Book_list> pageInfo = bookServiceImpl.getBooksBycondition(sex, isserial, typeId, hotValue,bookName, pn, ps);
		HashMap<String, Object> hashMap = new HashMap<String, Object>();
		hashMap.put("type", list);
		hashMap.put("pageInfo", pageInfo);
		return hashMap;

	}
	/**
	 * 前往书籍列表页面
	 * @return
	 */
	@GetMapping("bookPage")
	public String books(){
		return "partner/book/bookList";
	}
	
	/**
	 * 前往免费章节列表页面
	 * @param bookId
	 * @param request
	 * @return
	 */
	@GetMapping("book/{bookId}")
	public String catalog(@PathVariable()Integer bookId,HttpServletRequest request){
		HashMap<String, Object> map = bookServiceImpl.catalog(bookId);
		request.setAttribute("content", map);
		return "partner/book/chapterList";
	}
	
	@ResponseBody
	@GetMapping("content/{chapterId}")
	public HashMap<String, String> chapter(@PathVariable()Integer chapterId){
		String content = bookServiceImpl.getChapterContent(chapterId);
		HashMap<String,String> hashMap = new HashMap<String, String>();
		hashMap.put("content", content);
		return hashMap;
	}

}
