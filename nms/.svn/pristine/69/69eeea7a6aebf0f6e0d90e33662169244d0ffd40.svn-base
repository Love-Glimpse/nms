package com.kuaidu.nms.loginManage.controller;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kuaidu.nms.message.serviceImpl.CustomMsgImpl;

/** 
 * @Title AAA.java 
 * @description TODO 
 * @time 2018年10月23日 下午6:15:48 
 * @author victor 
 * @version 1.0 
**/

@Controller
@RequestMapping("")
public class AAA {
	@Autowired
	CustomMsgImpl cImpl;
	
	@ResponseBody
	@RequestMapping("temp")
	public void test(HttpServletRequest request,HttpSession session) throws Exception{
		//cImpl.createDailyCustomMsg();
	}
	   // 根据str,font的样式以及输出文件目录  
    public static byte[] createImage(String text, Font font)  
            throws Exception {  
    	int width = 570;
        //每行个数 
        int x_count = (width-10)/font.getSize();
    	//行数 
    	int y_bit = 0;
    	int x_bit = 0;
        for (int i = 0; i < text.length(); i++) {
        	char c = text.charAt(i);
        	
        	if (c==System.lineSeparator().charAt(0)||x_bit%x_count==0) {//换行符
        		y_bit++;
        		x_bit=0;
			}
        	x_bit++;
        	
        }
        int height = y_bit*(font.getSize()+2);
        // 创建图片  
        BufferedImage image = new BufferedImage(width, height+5,  
                BufferedImage.TYPE_INT_BGR);//创建图片画布  
        Graphics2D g = image.createGraphics(); 
        g.setColor(Color.WHITE); // 先用白色填充整张图片,也就是背景  
        g.fillRect(0, 0, width, height+5);//画出矩形区域，以便于在矩形区域内写入文字  
        g.setColor(Color.black);// 再换成黑色，以便于写入文字  
        // 抗锯齿
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g.setFont(font);// 设置画笔字体  
        x_bit=0;
        y_bit=0;
        for (int i = 0; i < text.length(); i++) {
        	char c = text.charAt(i);
        	if (c==System.lineSeparator().charAt(0)||x_bit%x_count==0) {//换行符
        		y_bit++;
        		x_bit = 0;
			}  
        	int y = y_bit*(font.getSize()+2);
    		int x= x_bit*font.getSize();
        	g.drawString(String.valueOf(c), x+10, y);// 画出符串  
        	x_bit++;
		}
        g.dispose();  
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ImageIO.write(image, "png", byteArrayOutputStream);// 输出png图片  
        System.out.println(byteArrayOutputStream.size());
        return byteArrayOutputStream.toByteArray();
    }  
}
