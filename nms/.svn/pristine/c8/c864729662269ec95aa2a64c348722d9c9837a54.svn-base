package com.kuaidu.nms.quartz;


import java.util.List;

import org.quartz.DisallowConcurrentExecution;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.kuaidu.nms.entity.WxCustomMsg;
import com.kuaidu.nms.message.serviceImpl.CustomMsgImpl;
import com.kuaidu.nms.utils.QueueManager;
import com.kuaidu.nms.utils.Utils;


/**
 * 客服消息处理
 * */
@Component
@DisallowConcurrentExecution
public class CustomMsgJob {
	@Autowired
	CustomMsgImpl cImpl ;
	 
	
	/**
	 * 每5分钟执行一次
	 * 1、关注后半小时首单福利（默认开启）
	 * 2、关注用户图文推送（关注6小时后）（默认开启）
	 * 3、签到用户（默认关闭）（签到12小时后）
	 * 4、订单待支付提醒（默认开启）（半小时后）
	 * 5、继续阅读提醒 （8小时未阅读） 
	 * 以上不需要去查询活跃用户
	 * */
	@Scheduled(cron="0 0/5 6-22 * * ?")
	public void createCustomMsg() {
		String ip = Utils.getLocalHostIp();
		if (ip.equals("69.171.67.171")) {
			cImpl.createCustomMsg();
		}
	}
	/**
	 * 智能托管
	 * 每天早上6:30点 / 下午6点30
	 * */
/*	@Scheduled(cron="0 0/10 * * * ?")
	public void createAutoSendCustomMsg() {
		String ip = Utils.getLocalHostIp();
		if (ip.equals("69.171.67.171")) {
			//cImpl.createCustomMsg();
		}
	}*/
	/**
	 * 载入客服消息
	 * 每10秒执行一次
	 * */
	@Scheduled(cron="0/10 * * * * ?")
	public void loadCustomMsg() {
		String ip = Utils.getLocalHostIp();
		if (ip.equals("69.171.67.171")) {
			List<WxCustomMsg> wxCustomMsgs = cImpl.loadCustomMsg();
			if (wxCustomMsgs.size()>0) {
				QueueManager.getInstance().addWxCustomMsg(wxCustomMsgs);
				cImpl.updateCustomMsg(wxCustomMsgs);
			}
		}
	}
	

}
