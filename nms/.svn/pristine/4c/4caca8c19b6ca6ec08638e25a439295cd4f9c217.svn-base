package com.kuaidu.nms.queryManage.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.kuaidu.nms.entity.Promoters;
import com.kuaidu.nms.entity.UserInfo;
import com.kuaidu.nms.query.serviceImpl.RegisterQueryMapperImpl;
import com.kuaidu.nms.utils.ResultData;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@Controller
@RequestMapping("/registerQuery")
public class RegisterQueryManage {
	@Autowired
	private RegisterQueryMapperImpl rImpl;
	
	public RegisterQueryMapperImpl getrImpl() {
		return rImpl;
	}

	public void setrImpl(RegisterQueryMapperImpl rImpl) {
		this.rImpl = rImpl;
	}

	@RequestMapping("/registerQueryIndex")
	public ModelAndView registerQueryManageIndex(HttpSession session){
		
		ModelAndView mv = new ModelAndView();
		try {
			//产品商
			List<Promoters> list = rImpl.getAllpromoters();
			mv.addObject("list", list);
			mv.setViewName("Query/registerQuery"); 
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mv;
	}
	
	@ResponseBody
	@RequestMapping("/getAll")
	public String getAll(HttpServletRequest request){
		String page= request.getParameter("page");
		String rows= request.getParameter("rows");
		Integer start_rows = Integer.parseInt(page)*Integer.parseInt(rows)-Integer.parseInt(rows);
		UserInfo uInfo = new UserInfo();
		
		uInfo.setMail(request.getParameter("mail"));
		uInfo.setPromoters_name(request.getParameter("promoters_name"));
		
		uInfo.setStart_rows(start_rows);
		uInfo.setEnd_rows(Integer.parseInt(rows));
		List<UserInfo> list = rImpl.getAll(uInfo);
		Integer total = rImpl.getCount(uInfo);
		return ResultData.toJsonString(total, list);
	}
	
	@SuppressWarnings("finally")
	@ResponseBody
	@RequestMapping("/del")
	public String del(HttpServletRequest request){
		String node = request.getParameter("node");
		JSONObject jsonObject = new JSONObject();
		JSONArray jsonArray = new JSONArray();
		try {
			 List<Object> list= new ArrayList<Object>();
			JSONArray jArray = JSONArray.fromObject(node);
			for (int i = 0; i < jArray.size(); i++) {
				list.add(jArray.get(i));
				
			}
			rImpl.del(list);
			jsonObject.put("result", "0");
		} catch (Exception e) {
			jsonObject.put("result", "1");
			e.printStackTrace();
		}finally{
			 jsonArray.add(jsonObject.toString());
			 return jsonArray.toString();
		}
	}
}
